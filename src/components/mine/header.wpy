<template>
  <view class="mine-header">
    <view class="userinfo">
      <image class="userinfo-avatar" src="{{userInfo.avatarUrl}}" background-size="cover"></image>
      <text class="userinfo-nickname">{{userInfo.nickName}}</text>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { USER_INFO } from '../../utils/constant'

export default class LMineHeader extends wepy.component {
  data = {
    userInfo: {}
  }

  props = {
  }

  onLoad () {
    this.getUserInfo()
  }

  methods = {
  }

  async getUserInfo () {
    // 先从storage里面去取（第一次一般取不到，storage异步，可能还未设置进去）没取到则调用接口
    this.userInfo = wepy.getStorageSync(USER_INFO) || {}
    console.log('this.userInfo:', this.userInfo, Object.keys(this.userInfo))

    if (Object.keys(this.userInfo).length === 0) {
      try {
        await wepy.getUserInfo().then(res => {
          console.log('userinfo: ', res.userInfo)
          this.userInfo = res.userInfo
          this.$apply()
        })
      } catch (err) {
        return new Error(err)
      }
    }
  }

  watch = {
    userInfo (newValue, oldValue) {
      console.log(`num value: ${oldValue} -> ${newValue}`)
    }
  }
}
</script>

<style lang="scss">
@import '../../common/styles/var.scss';

.mine-header {
  width: 100%;
  height: 360rpx;
  background: $defaultColor;
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-top: 40rpx;
    .userinfo-avatar {
      width: 128rpx;
      height: 128rpx;
      margin: 20rpx;
      border-radius: 50%;
    }

    .userinfo-nickname {
      color: white;
    }
  }
}
</style>
