<template>
  <view class="goods-list">
    <view class="left-wrapper">
      <scroll-view scroll-y>
        <view wx:for="{{items}}"
                   wx:for-key="{{item.typeId}}"
                   wx:for-index="index"
                   class="type-item {{checked === index ? 'is-checked' : ''}}"
                   @tap="toType({{item}}, {{index}})">
          {{ item.title }}
        </view>
      </scroll-view>
    </view>
    <scroll-view scroll-y
                 class="right-wrapper"
                 bindscroll="onScroll"
                 scroll-into-view="{{toView}}"
                 id="right">
      <view wx:for="{{items}}" wx-for-item="item" class="lists" id="type-{{item.typeId}}">
        <view class="type-title">
          {{item.title}}
        </view>
        <view class="content">
          <view wx:for="{{item.child}}" wx:for-item="childItem" wx:for-index="itemIndex" wx:for-key="itemIndex" class="item">
            <view class="image">

            </view>
            <view class="item-right">
              <view class="title">
                {{ childItem.title }}
              </view>
              <view class="desc">
                {{ childItem.desc }}
              </view>
              <view class="price">
                ￥{{ childItem.price }}
              </view>
            </view>
            <view class="counter">
              <view class="btn-reduce"
                    @tap.stop="catchReduce({{index}}, {{itemIndex}})" wx:if="{{childItem.num && childItem.num > 0}}">
                <i class="iconfont icon-jianhao"></i>
              </view>
              <view wx:if="{{childItem.num}}" class="num">{{childItem.num}}</view>
              <view class="btn-add"
                    @tap.stop="catchAdd({{index}}, {{itemIndex}})">
                <i class="iconfont icon-jiahao1"></i>
              </view>
            </view>
          </view>
        </view>
      </view>
    </scroll-view>
  </view>
</template>

<script>
import wepy from 'wepy'
import Couter from '../common/couter'

export default class GoodsList extends wepy.component {
  components = {
    'couter': Couter
  }

  data = {
    toView: '',
    checked: -1,
    scrollTops: {},
    dir: 'down',
    currentTop: 0,
    // types: ['first', 'second', 'third', 'fourth'],
    items: [
      {
        typeId: 0,
        title: '蔬菜',
        child: [
          {
            id: 0,
            title: '某种食物',
            desc: '能吃的',
            price: '30'
          }, {
            id: 1,
            title: '某种食物',
            desc: '能吃的',
            price: '50'
          }, {
            id: 2,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 3,
            title: '某种食物',
            desc: '能吃的',
            price: '200'
          }, {
            id: 4,
            title: '某种食物',
            desc: '能吃的',
            price: '300'
          }, {
            id: 5,
            title: '某种食物',
            desc: '能吃的',
            price: '500'
          }
        ]
      }, {
        typeId: 1,
        title: '水果',
        child: [
          {
            id: 10,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 11,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 12,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 13,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 14,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 15,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }
        ]
      }, {
        typeId: 2,
        title: '肉',
        child: [
          {
            id: 20,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 21,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 22,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 23,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 24,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 25,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }
        ]
      }, {
        typeId: 3,
        title: '海鲜',
        child: [
          {
            id: 30,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 31,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 32,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 33,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 34,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }, {
            id: 35,
            title: '某种食物',
            desc: '能吃的',
            price: '100'
          }
        ]
      }
    ]
  }

  methods = {
    onScroll (event) {
      // 如果是右侧的滚动view
      if (event.currentTarget.id === 'right') {
        // 判断滚动的方向
        let top = event.detail.scrollTop
        this.dir = this.currentTop < top ? 'down' : 'up'
        this.currentTop = top
        // 判断当前滚动条所在区域，如果不在当前区域则进行跳转
        // console.log('scroll', this.checked, this.items.length, this.toView)
        if (this.checked < this.items.length - 1 &&
            top > this.scrollTops[this.getNextView()] &&
            this.dir === 'down') {
          this.setChecked(this.checked + 1)
        }
        if (this.checked > 0 &&
            top < this.scrollTops[this.toView] &&
            this.dir === 'up') {
          this.setChecked(this.checked - 1)
        }
      }
    },
    toType (item, index) {
      this.toView = this.getType(item.typeId)
      this.setChecked(index)
    },
    catchAdd (pidx, cidx) {
      if (!this.items[pidx].child[cidx].num) {
        this.items[pidx].child[cidx].num = 0
      }
      ++this.items[pidx].child[cidx].num
      this.$emit('addToCart', this.items[pidx].child[cidx])
    },
    catchReduce (pidx, cidx) {
      if (!this.items[pidx].child[cidx].num) {
        this.items[pidx].child[cidx].num = 0
      }
      --this.items[pidx].child[cidx].num
      this.$emit('addToCart', this.items[pidx].child[cidx])
      // addToCart
    }
  }

  onLoad () {
    console.log('onLoad', this.items)
    this.setChecked(0)
  }

  setChecked (index) {
    let idx = index || 0

    if (this.items &&
        this.items.length > 0 &&
        idx < this.items.length) {
      this.checked = idx
      this.toView = this.getType(this.items[idx].typeId)
    }
  }

  getScrollTops () {
    let query = wepy.createSelectorQuery()
    for (let i = 0; i < this.items.length; ++i) {
      let id = this.getType(this.items[i].typeId)
      query.select(`#${id}`).boundingClientRect((rect) => {
        this.scrollTops[id] = rect.top
      }).exec()
    }
  }

  getNextView () {
    let typeId = this.items[this.checked + 1].typeId
    return this.getType(typeId)
  }

  getPreView () {
    let typeId = this.items[this.checked - 1].typeId
    return this.getType(typeId)
  }

  getType (typeId) {
    return `type-${typeId}`
  }
}
</script>

<style lang="scss">
@import '../../common/styles/var.scss';

.goods-list {
  width: 100%;
  display: flex;
  overflow: hidden;
  background: white;
  .left-wrapper {
    width: 30%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
    background: #f3f4f5;
    .type-item {
      height: 100rpx;
      line-height: 100rpx;
      text-align: center;
      border-bottom: 1px solid #ddd;
      color: #555;
      &.is-checked {
        background: white;
        border-left: 4px solid $defaultColor;
        border-bottom: none;
        color: $defaultColor;
      }
    }
  }

  .right-wrapper {
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
    height: 100%;
    .lists {
      .type-title {
        position: sticky;
        top: 0;
        padding: 3px 10px;
        background: #e7e7e7;
        color: #777;
        z-index: 10;
      }
      .content {
        .item {
          display: flex;
          padding: 10px;
          position: relative;
          .image {
            width: 160rpx;
            height: 160rpx;
            border: 1px solid #d7d7d7;
            border-radius: 4px;
          }

          .item-right {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            margin-left: 10px;
            .title {
              flex-grow: 1;
            }
            .desc {
              flex-grow: 2;
              font-size: 24rpx;
              color: #7f7f7f;
            }
            .price {
              flex-grow: 1;
              color: $colorR;
            }
          }

          &:not(:last-child) {
            border-bottom: 1px solid #ddd;
          }

          .counter {
            position: absolute;
            right: 10px;
            bottom: 10px;
            display: flex;
            width: 70px;
            text-align: center;
            justify-content: flex-end;
            .iconfont {
              font-size:24rpx;
              flex: 1;
              padding: 3px;
              border-radius: 50%;
            }
            .icon-jianhao {
              color: #b7b7b7;
              border: 1px solid #b7b7b7;
            }
            .num {
              color: #777;
              flex: 1;
              margin: 0 5px;
            }
            .icon-jiahao1 {
              color: $defaultColor;
              border: 1px solid $defaultColor;
            }
          }
        }
      }
    }
  }
}
</style>
