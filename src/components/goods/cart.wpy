<template>
  <view class="goods-cart-container">
    <mask wx:if="{{show}}"></mask>
    <view class="cart-wrapper">
      <view class="cart-content"
            wx:if="{{show}}">
        <view class="cart-title">
          已选择商品
        </view>
        <view class="cart-list">
          <view class="list-item"
                wx:for="{{list}}"
                wx:key="index">
            <view class="left">
              <view class="title">
                {{ item.title }}
              </view>
              <view class="desc">
                {{ item.desc }}
              </view>
            </view>
            <view class="price">
              ￥{{ item.price }}
            </view>
            <view class="counter">
              数量：{{ item.num }}
            </view>
          </view>
        </view>
      </view>
      <view class="bottom-cart">
        <view class="left"
              @tap="showList">
          <div class="icon {{list.length === 0 ? 'empty' : ''}}">
            <i class="iconfont icon-gouwuchefill"></i>
          </div>
          <view class="price"
                wx:if="{{totalPrice}}">￥{{ totalPrice ? totalPrice : 0 }}</view>
        </view>
        <button class="right {{list.length === 0 ? 'empty' : ''}}"
                @tap="toPay"
                disabled="{{list.length === 0}}">
          去结算
        </button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from "wepy";
  import Mask from "../common/mask";
  import { CART_GOODS } from "../../utils/constant";

  export default class GoodsCart extends wepy.component {
    components = {
      mask: Mask
    };

    props = {
      list: Array,
      twoWay: true
    };

    data = {
      show: false,  // mask 控制
      totalPrice: 0,  // 总金额
      listObj: {
        totalPrice: "",
        list: []
      }
    };

    methods = {
      showList() { // 判断是否显示已购待支付清单和遮罩层
        this.list.length === 0 ? false : (this.show = true);
      },
      toPay() {
        // 将goods存到storage里
        console.log("set storage: ", this.list);
        // 需要缓存的对象
        this.listObj.list = this.list;

        //同步将 data 存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容
        wepy.setStorageSync(CART_GOODS, this.listObj);

        // 跳转页面
        wepy.navigateTo({ url: "/pages/goods/order" });
        console.log("pay money.");
      }
    };

    events = {
      hide() {
        this.show = false;
      },

      cartChange: cartList => {
        this.totalPrice = 0;
        for (let i = 0; i < cartList.length; ++i) {
          this.totalPrice += (parseInt(cartList[i].price) * parseInt(cartList[i].num));
        }
        this.listObj.totalPrice = this.totalPrice;
      }
    };
  }
</script>

<style lang="scss">
  @import "../../common/styles/var.scss";

  .goods-cart-container {
    max-height: 1000rpx;
    width: 100%;
    background: white;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    overflow: hidden;
    .cart-wrapper {
      position: relative;
      z-index: 1001;
      .cart-content {
        background: white;
        .cart-title {
          padding: 5px 10px;
          background: #dfdfdf;
          color: $defaultColor;
        }
        .cart-list {
          max-height: 500rpx;
          overflow-y: scroll;
          .list-item {
            display: flex;
            align-items: center;
            padding: 5px 10px;
            &:not(:last-child) {
              border-bottom: 1px solid #eee;
            }
            .left {
              flex-grow: 1;
              .title {
              }
              .desc {
                font-size: 24rpx;
                color: #bbb;
              }
            }
            .price {
              color: $colorR;
            }
            .counter {
              margin-left: 15px;
              font-size: 26rpx;
              text-align: right;
            }
          }
        }
      }
      .bottom-cart {
        height: 44px;
        line-height: 44px;
        background: white;
        display: flex;
        border-top: 1px solid #eee;
        .left {
          flex: 2;
          display: flex;
          .icon {
            margin: 0 30rpx;
            &.empty {
              .iconfont {
                color: #ddd;
              }
            }
            .iconfont {
              font-size: 56rpx;
              color: $defaultColor;
            }
          }
          .price {
            color: $colorR;
          }
        }
        .right {
          background: $defaultColor;
          color: white;
          flex: 1;
          text-align: center;
          border-radius: 0;
          &:after {
            border: none;
          }
          &:active {
            opacity: 0.7;
          }
          &.empty {
            background: #ddd;
          }
        }
      }
    }
  }
</style>
